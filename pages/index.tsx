import {dehydrate, QueryClient, useQuery } from "@tanstack/react-query";
import Head from "next/head";
import Image from "next/image";
import React, { useState, useMemo } from "react";
import styles from "../styles/Home.module.css";

interface Pokemon {
  id: number;
  name: string;
  image: string;
}
const getPokemon = (): Promise<Pokemon[]> =>
  fetch("https://jherr-pokemon.s3.us-west-1.amazonaws.com/index.json").then(
    (res) => res.json()
  );

export async function getServerSideProps() {

  const queryClient = new QueryClient();
  await queryClient.prefetchQuery(["pokemon"],getPokemon)
  return {
    props: {
      dehydratedState: dehydrate(queryClient)
    },
  };
}
export default function Home() {
  const { data: pokemon } = useQuery(["pokemon"], getPokemon, {
    refetchOnMount: false,
    refetchOnWindowFocus: false,
  });
  const [filter, setFilter] = useState("");

  const filteredPokemon = useMemo(
    () =>
      pokemon.filter((p) =>
        p.name.toLowerCase().includes(filter.toLowerCase())
      ),
    [filter, pokemon]
  );
  return (
    <div className={styles.main}>
      <Head>
        <title>Pokemon</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <input
          type="text"
          value={filter}
          onChange={(e) => setFilter(e.target.value)}
          className={styles.search}
        />
      </div>
      <div className={styles.container}>
        {filteredPokemon.slice(0, 20).map((p) => (
          <div key={p.id} className={styles.image}>
            <Image
              alt={p.name}
              src={`https://jherr-pokemon.s3.us-west-1.amazonaws.com/${p.image}`}
              width={100}
              height={100}
            />
            <h2>{p.name}</h2>
          </div>
        ))}
      </div>
    </div>
  );
}
